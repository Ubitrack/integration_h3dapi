<?xml version="1.0" encoding="utf-8"?>
<X3D profile='H3DAPI' version='1.4'>
  <head>
    <meta name='title' content='FrameBufferTextureGenerator_shader.x3d'/>
    <meta name='description' content='H3DAPI FrameBufferTextureGenerator example. It shows how to use it together with glsl shaders to write to different output textures using gl_FragData. It shows three rectangles with the depth buffer textured on one and two color buffers on the other ones. Each is colored differently according to the glsl shader. This example uses H3DAPI node(s) and runs on H3DAPI-supported browsers only. Visit http://www.h3d.org for more information and to download an H3DAPI-
      compatible browser. '/>
    <meta name='author' content='SenseGraphics AB, 2006-2014'/>
  </head>

  <Scene>
    <ImportLibrary library="libh3dubitrack.dylib" />
    <Viewpoint position='0 0 0.6' />

    <Group>
      <FrameBufferTextureGenerator DEF="GEN" outputTextureType="2D" generateDepthTexture="true" generateColorTextures='"RGBA" "RGBA32F"' >
        <!-- Scene tp render to texture -->
        <Shape>
          <Appearance>
            <ComposedShader language="GLSL">
              <ShaderPart type="VERTEX" url="shaders/mrt.vert" />
              <ShaderPart type="FRAGMENT" url="shaders/mrt.frag" />
            </ComposedShader>
          </Appearance>
          <Box size="0.2 0.2 0.2" />
        </Shape>
      </FrameBufferTextureGenerator>


      <UbitrackInstance url="test_imagesender.dfg" autoStart="true" 
        componentDir="/usr/local/lib/ubitrack">
        <ImageSender pattern="testimage" DEF="IMGSNDR">
        </ImageSender>
      </UbitrackInstance>

      <!-- Shape for rendering depth texture on -->
      <Shape>
        <Appearance DEF="APP" >
          <Material/>
        </Appearance>
        <Rectangle2D size="0.1 0.1"/>
      </Shape>

    </Group>
    <ROUTE fromNode="GEN" fromField="depthTexture" toNode="APP" toField="texture" />
    <ROUTE fromNode="GEN" fromField="depthTexture" toNode="IMGSNDR" toField="value" />
  </Scene>
</X3D>
